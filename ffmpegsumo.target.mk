# This file is generated by gyp; do not edit.

TOOLSET := target
TARGET := ffmpegsumo
### Generated for rule ffmpegsumo_assemble:
$(obj)/gen/third_party/ffmpeg/deinterlace.o: obj := $(abs_obj)

$(obj)/gen/third_party/ffmpeg/deinterlace.o: builddir := $(abs_builddir)

$(obj)/gen/third_party/ffmpeg/deinterlace.o: TOOLSET := $(TOOLSET)
$(obj)/gen/third_party/ffmpeg/deinterlace.o: third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/x86/deinterlace.asm $(builddir)/yasm FORCE_DO_CMD
	$(call do_cmd,ffmpegsumo_assemble_0)

all_deps += $(obj)/gen/third_party/ffmpeg/deinterlace.o
cmd_ffmpegsumo_assemble_0 = export LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; cd third_party/ffmpeg; mkdir -p $(obj)/gen/third_party/ffmpeg; "$(builddir)/yasm" -f elf -DARCH_X86_32 -m x86 -I patched-ffmpeg-mt/libavcodec/x86/ -o "$(obj)/gen/third_party/ffmpeg/deinterlace.o" "$(abspath $<)"
quiet_cmd_ffmpegsumo_assemble_0 = RULE ffmpegsumo_assemble_0 $@

$(obj)/gen/third_party/ffmpeg/dsputil_yasm.o: obj := $(abs_obj)

$(obj)/gen/third_party/ffmpeg/dsputil_yasm.o: builddir := $(abs_builddir)

$(obj)/gen/third_party/ffmpeg/dsputil_yasm.o: TOOLSET := $(TOOLSET)
$(obj)/gen/third_party/ffmpeg/dsputil_yasm.o: third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/x86/dsputil_yasm.asm $(builddir)/yasm FORCE_DO_CMD
	$(call do_cmd,ffmpegsumo_assemble_1)

all_deps += $(obj)/gen/third_party/ffmpeg/dsputil_yasm.o
cmd_ffmpegsumo_assemble_1 = export LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; cd third_party/ffmpeg; mkdir -p $(obj)/gen/third_party/ffmpeg; "$(builddir)/yasm" -f elf -DARCH_X86_32 -m x86 -I patched-ffmpeg-mt/libavcodec/x86/ -o "$(obj)/gen/third_party/ffmpeg/dsputil_yasm.o" "$(abspath $<)"
quiet_cmd_ffmpegsumo_assemble_1 = RULE ffmpegsumo_assemble_1 $@

$(obj)/gen/third_party/ffmpeg/dsputilenc_yasm.o: obj := $(abs_obj)

$(obj)/gen/third_party/ffmpeg/dsputilenc_yasm.o: builddir := $(abs_builddir)

$(obj)/gen/third_party/ffmpeg/dsputilenc_yasm.o: TOOLSET := $(TOOLSET)
$(obj)/gen/third_party/ffmpeg/dsputilenc_yasm.o: third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/x86/dsputilenc_yasm.asm $(builddir)/yasm FORCE_DO_CMD
	$(call do_cmd,ffmpegsumo_assemble_2)

all_deps += $(obj)/gen/third_party/ffmpeg/dsputilenc_yasm.o
cmd_ffmpegsumo_assemble_2 = export LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; cd third_party/ffmpeg; mkdir -p $(obj)/gen/third_party/ffmpeg; "$(builddir)/yasm" -f elf -DARCH_X86_32 -m x86 -I patched-ffmpeg-mt/libavcodec/x86/ -o "$(obj)/gen/third_party/ffmpeg/dsputilenc_yasm.o" "$(abspath $<)"
quiet_cmd_ffmpegsumo_assemble_2 = RULE ffmpegsumo_assemble_2 $@

$(obj)/gen/third_party/ffmpeg/fft_mmx.o: obj := $(abs_obj)

$(obj)/gen/third_party/ffmpeg/fft_mmx.o: builddir := $(abs_builddir)

$(obj)/gen/third_party/ffmpeg/fft_mmx.o: TOOLSET := $(TOOLSET)
$(obj)/gen/third_party/ffmpeg/fft_mmx.o: third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/x86/fft_mmx.asm $(builddir)/yasm FORCE_DO_CMD
	$(call do_cmd,ffmpegsumo_assemble_3)

all_deps += $(obj)/gen/third_party/ffmpeg/fft_mmx.o
cmd_ffmpegsumo_assemble_3 = export LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; cd third_party/ffmpeg; mkdir -p $(obj)/gen/third_party/ffmpeg; "$(builddir)/yasm" -f elf -DARCH_X86_32 -m x86 -I patched-ffmpeg-mt/libavcodec/x86/ -o "$(obj)/gen/third_party/ffmpeg/fft_mmx.o" "$(abspath $<)"
quiet_cmd_ffmpegsumo_assemble_3 = RULE ffmpegsumo_assemble_3 $@

$(obj)/gen/third_party/ffmpeg/vp3dsp.o: obj := $(abs_obj)

$(obj)/gen/third_party/ffmpeg/vp3dsp.o: builddir := $(abs_builddir)

$(obj)/gen/third_party/ffmpeg/vp3dsp.o: TOOLSET := $(TOOLSET)
$(obj)/gen/third_party/ffmpeg/vp3dsp.o: third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/x86/vp3dsp.asm $(builddir)/yasm FORCE_DO_CMD
	$(call do_cmd,ffmpegsumo_assemble_4)

all_deps += $(obj)/gen/third_party/ffmpeg/vp3dsp.o
cmd_ffmpegsumo_assemble_4 = export LD_LIBRARY_PATH=$(builddir)/lib.host:$(builddir)/lib.target:$$LD_LIBRARY_PATH; cd third_party/ffmpeg; mkdir -p $(obj)/gen/third_party/ffmpeg; "$(builddir)/yasm" -f elf -DARCH_X86_32 -m x86 -I patched-ffmpeg-mt/libavcodec/x86/ -o "$(obj)/gen/third_party/ffmpeg/vp3dsp.o" "$(abspath $<)"
quiet_cmd_ffmpegsumo_assemble_4 = RULE ffmpegsumo_assemble_4 $@

rule_ffmpegsumo_assemble_outputs := $(obj)/gen/third_party/ffmpeg/deinterlace.o \
	$(obj)/gen/third_party/ffmpeg/dsputil_yasm.o \
	$(obj)/gen/third_party/ffmpeg/dsputilenc_yasm.o \
	$(obj)/gen/third_party/ffmpeg/fft_mmx.o \
	$(obj)/gen/third_party/ffmpeg/vp3dsp.o

### Finished generating for rule: ffmpegsumo_assemble

### Finished generating for all rules

DEFS_Debug := '-DNO_HEAPCHECKER' \
	'-DCHROMIUM_BUILD' \
	'-DOS_MEEGO=1' \
	'-DTOOLKIT_MEEGOTOUCH=1' \
	'-DENABLE_REMOTING=1' \
	'-DENABLE_GPU=1' \
	'-DENABLE_EGLIMAGE=1' \
	'-DHAVE_AV_CONFIG_H' \
	'-D_POSIX_C_SOURCE=200112' \
	'-D_ISOC99_SOURCE' \
	'-D_LARGEFILE_SOURCE' \
	'-DDYNAMIC_ANNOTATIONS_ENABLED=1' \
	'-D_DEBUG'

# Flags passed to both C and C++ files.
CFLAGS_Debug :=  \
	-pthread \
	-fno-exceptions \
	-Wno-unused-parameter \
	-Wno-missing-field-initializers \
	-D_FILE_OFFSET_BITS=64 \
	-pipe \
	-m32 \
	-mmmx \
	-march=pentium4 \
	-msse2 \
	-mfpmath=sse \
	-fno-strict-aliasing \
	-fomit-frame-pointer \
	-std=c99 \
	-pthread \
	-fno-math-errno \
	-Wno-deprecated-declarations \
	-Wno-deprecated \
	-Wno-format \
	-O2 \
	-g

# Flags passed to only C (and not C++) files.
CFLAGS_C_Debug := 

# Flags passed to only C++ (and not C) files.
CFLAGS_CC_Debug := -fno-threadsafe-statics \
	-fvisibility-inlines-hidden

INCS_Debug := -Ithird_party/ffmpeg/config/Chromium/linux/ia32 \
	-Ithird_party/ffmpeg/patched-ffmpeg-mt \
	-Ithird_party/ffmpeg/config \
	-Ithird_party/libvpx/include

DEFS_Release := '-DNO_HEAPCHECKER' \
	'-DCHROMIUM_BUILD' \
	'-DOS_MEEGO=1' \
	'-DTOOLKIT_MEEGOTOUCH=1' \
	'-DENABLE_REMOTING=1' \
	'-DENABLE_GPU=1' \
	'-DENABLE_EGLIMAGE=1' \
	'-DHAVE_AV_CONFIG_H' \
	'-D_POSIX_C_SOURCE=200112' \
	'-D_ISOC99_SOURCE' \
	'-D_LARGEFILE_SOURCE' \
	'-DNDEBUG' \
	'-DNVALGRIND' \
	'-DDYNAMIC_ANNOTATIONS_ENABLED=0'

# Flags passed to both C and C++ files.
CFLAGS_Release :=  \
	-pthread \
	-fno-exceptions \
	-Wno-unused-parameter \
	-Wno-missing-field-initializers \
	-D_FILE_OFFSET_BITS=64 \
	-pipe \
	-m32 \
	-mmmx \
	-march=pentium4 \
	-msse2 \
	-mfpmath=sse \
	-fno-strict-aliasing \
	-fomit-frame-pointer \
	-std=c99 \
	-pthread \
	-fno-math-errno \
	-Wno-deprecated-declarations \
	-Wno-deprecated \
	-Wno-format \
	-O2 \
	-fno-ident \
	-fdata-sections \
	-ffunction-sections \
	-g

# Flags passed to only C (and not C++) files.
CFLAGS_C_Release := 

# Flags passed to only C++ (and not C) files.
CFLAGS_CC_Release := -fno-threadsafe-statics \
	-fvisibility-inlines-hidden

INCS_Release := -Ithird_party/ffmpeg/config/Chromium/linux/ia32 \
	-Ithird_party/ffmpeg/patched-ffmpeg-mt \
	-Ithird_party/ffmpeg/config \
	-Ithird_party/libvpx/include

OBJS := $(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/allcodecs.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/audioconvert.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/avpacket.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/bitstream.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/bitstream_filter.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/dsputil.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/faandct.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/faanidct.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/fft.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/golomb.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/imgconvert.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/jfdctfst.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/jfdctint.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/jrevdct.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/mdct.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/mpeg4audio.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/opt.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/options.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/parser.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/pcm.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/pthread.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/raw.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/simple_idct.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/utils.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/vorbis.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/vorbis_data.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/vorbis_dec.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/vp3.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/vp3dsp.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/xiph.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcore/imgutils.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcore/parseutils.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcore/samplefmt.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavformat/allformats.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavformat/avio.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavformat/aviobuf.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavformat/cutils.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavformat/id3v1.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavformat/id3v2.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavformat/isom.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavformat/matroska.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavformat/matroskadec.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavformat/metadata.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavformat/metadata_compat.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavformat/oggdec.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavformat/oggparseogm.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavformat/oggparseskeleton.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavformat/oggparsetheora.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavformat/oggparsevorbis.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavformat/options.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavformat/pcm.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavformat/riff.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavformat/utils.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavformat/vorbiscomment.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavformat/wav.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavutil/avstring.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavutil/base64.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavutil/cpu.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavutil/crc.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavutil/eval.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavutil/intfloat_readwrite.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavutil/inverse.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavutil/log.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavutil/lzo.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavutil/mathematics.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavutil/mem.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavutil/opt.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavutil/pixdesc.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavutil/rational.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/libvpxdec.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/libvpxenc.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/x86/dsputil_mmx.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/x86/dsputilenc_mmx.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/x86/fdct_mmx.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/x86/fft.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/x86/fft_sse.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/x86/idct_mmx_xvid.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/x86/idct_sse2_xvid.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/x86/motion_est_mmx.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavcodec/x86/simple_idct_mmx.o \
	$(obj).target/$(TARGET)/third_party/ffmpeg/patched-ffmpeg-mt/libavutil/x86/cpu.o

# Add to the list of files we specially track dependencies for.
all_deps += $(OBJS)

# Make sure our dependencies are built before any of us.
$(OBJS): | $(builddir)/yasm $(obj).target/third_party/libvpx/libvpx.a

# Make sure our actions/rules run before any of us.
$(OBJS): | $(rule_ffmpegsumo_assemble_outputs)

# CFLAGS et al overrides must be target-local.
# See "Target-specific Variable Values" in the GNU Make manual.
$(OBJS): TOOLSET := $(TOOLSET)
$(OBJS): GYP_CFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE)) $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_C_$(BUILDTYPE))
$(OBJS): GYP_CXXFLAGS := $(DEFS_$(BUILDTYPE)) $(INCS_$(BUILDTYPE)) $(CFLAGS_$(BUILDTYPE)) $(CFLAGS_CC_$(BUILDTYPE))

# Suffix rules, putting all outputs into $(obj).

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(srcdir)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# Try building from generated source, too.

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj).$(TOOLSET)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

$(obj).$(TOOLSET)/$(TARGET)/%.o: $(obj)/%.c FORCE_DO_CMD
	@$(call do_cmd,cc,1)

# End of this set of suffix rules
### Rules for final target.
# Build our special outputs first.
$(obj).target/third_party/ffmpeg/libffmpegsumo.so: | $(rule_ffmpegsumo_assemble_outputs)

# Preserve order dependency of special output on deps.
$(rule_ffmpegsumo_assemble_outputs): | $(builddir)/yasm $(obj).target/third_party/libvpx/libvpx.a

LDFLAGS_Debug := -pthread \
	-Wl,-z,noexecstack \
	-m32 \
	-Wl,-Bsymbolic \
	-L$(obj)/gen/third_party/ffmpeg

LDFLAGS_Release := -pthread \
	-Wl,-z,noexecstack \
	-m32 \
	-Wl,-Bsymbolic \
	-L$(obj)/gen/third_party/ffmpeg \
	-Wl,-O1 \
	-Wl,--gc-sections

LIBS := -lz

$(obj).target/third_party/ffmpeg/libffmpegsumo.so: GYP_LDFLAGS := $(LDFLAGS_$(BUILDTYPE))
$(obj).target/third_party/ffmpeg/libffmpegsumo.so: LIBS := $(LIBS)
$(obj).target/third_party/ffmpeg/libffmpegsumo.so: TOOLSET := $(TOOLSET)
$(obj).target/third_party/ffmpeg/libffmpegsumo.so: $(OBJS) $(obj)/gen/third_party/ffmpeg/deinterlace.o $(obj)/gen/third_party/ffmpeg/dsputil_yasm.o $(obj)/gen/third_party/ffmpeg/dsputilenc_yasm.o $(obj)/gen/third_party/ffmpeg/fft_mmx.o $(obj)/gen/third_party/ffmpeg/vp3dsp.o $(obj).target/third_party/libvpx/libvpx.a FORCE_DO_CMD
	$(call do_cmd,solink)

all_deps += $(obj).target/third_party/ffmpeg/libffmpegsumo.so
# Add target alias
.PHONY: ffmpegsumo
ffmpegsumo: $(builddir)/lib.target/libffmpegsumo.so

# Copy this to the shared library output path.
$(builddir)/lib.target/libffmpegsumo.so: TOOLSET := $(TOOLSET)
$(builddir)/lib.target/libffmpegsumo.so: $(obj).target/third_party/ffmpeg/libffmpegsumo.so FORCE_DO_CMD
	$(call do_cmd,copy)

all_deps += $(builddir)/lib.target/libffmpegsumo.so
# Short alias for building this shared library.
.PHONY: libffmpegsumo.so
libffmpegsumo.so: $(obj).target/third_party/ffmpeg/libffmpegsumo.so $(builddir)/lib.target/libffmpegsumo.so

# Add shared library to "all" target.
.PHONY: all
all: $(builddir)/lib.target/libffmpegsumo.so

